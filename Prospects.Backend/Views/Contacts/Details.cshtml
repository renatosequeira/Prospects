@model Prospects.Domain.Contact

@{
    ViewBag.Title = "Detalhes";
}

<h2>Detalhes de <span style="color:blue">@Model.ContactName</span></h2>

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Company.CompanyName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Company.CompanyName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ContactName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ContactName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ContactMobile)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ContactMobile)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ContactEmail)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ContactEmail)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ContactWebsite)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ContactWebsite)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Contacted)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Contacted)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ContactAddedBy)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ContactAddedBy)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ContactPositionInCompany)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ContactPositionInCompany)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LinkedInProfile)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LinkedInProfile)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.ContactNotes)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ContactNotes)
        </dd>
    </dl>

    <p>

        @*@Html.ActionLink("Edit", "Edit", new { id = Model.ContactId })*@
        @*@Html.ActionLink("Back to List", "Index")*@
        <a href="javascript:void(0);" onclick="history.go(-1);" class="btn btn-default"><span class="glyphicon glyphicon-chevron-left"></span> Voltar</a> |
        @Html.ActionLink("Editar", "Edit", "Contacts", new { id = Model.ContactId }, new { @class = "btn btn-warning btn-btn-small" })
    </p>

    @if (Model.Communications != null)
    {
        <h2>COMUNICAÇÕES @Model.ContactName.ToUpper()</h2>

        <p>@Html.ActionLink("+", "Create", "Communications", new { cont = Model.ContactId }, new { @class = "btn btn-success btn-small" })</p>

        <table class="table table-responsive table-hover">
            <thead class="thead-dark">
                <tr>
                    <td>Data Contacto</td>
                    <td>Descrição Contacto</td>
                    <td>Respondido</td>
                </tr>
            </thead>

            @foreach (var contact in Model.Communications.OrderBy(c => c.CommunicationDate))
            {
                <tr>
                    <td><b>@contact.CommunicationDate</b></td>
                    <td>@contact.CommunicationDescription</td>
                    <td>
                        @if (contact.CommunicationReply)
                        {
                            <img src="~/Content/Images/ic_checked.png" width="20" />
                        }
                        else
                        {
                            <img src="~/Content/Images/ic_unchecked.png" width="20" />
                        }
                    </td>
                    <td>@Html.ActionLink("Ver", "Details", "Communications", new { id = contact.CommunicationId }, new { @class = "btn btn-success btn-btn-small" })</td>
                </tr>
            }
        </table>
    }
    else
    {
        <p>No jobs found</p>
    }
</div>



<script type="text/javascript">
    $(document).on('click', '#backLink', function () {
        history.go(-1);
    });
</script>